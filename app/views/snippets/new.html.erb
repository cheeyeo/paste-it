<div class="content">
  

<%= error_messages_for 'snippet' %>

<% form_for @snippet do |f| %>

    <div id="gist_data">

	<div id="files">
	  <div class="file">

	  <div class="meta">
	    <div class="language">
	      <div class="gist-lang-desc" style="display: none;">Language detected by filename extension</div>
	      <div class="gist-lang">
	        <div>
    
	         Language:
	         <select name="snippet[file_ext]">
	           <% Snippet.load_extensions.each do |ex|%>
	              <option value="<%=ex[1]%>"><%=ex[0]%></option>
				<% end %>
	         </select>

	      </div>
	    </div>
		</div>
		
		<div class="name">
		      <input id="snippet-name-textbox" class="snippet-name-textbox" type="text" style="display:none;" name="snippet[file_name]">
		      <a class="name-file" href="#">File Name (not required)</a>
		    </div>
		  </div>
		
	
	<!--<div class="name">
	  <label for "snippet-name-textbox">File Title</label>
	  <input class="snippet-name-textbox" type="text" style="" name="snippet[file_name]">
	</div>
    </div>-->

		<div class="input">
		<%= f.text_area 'body' , {:id => 'holder'} %>
		</div>
		</div>
		</div>

		<%= submit_tag "Create" %>
		
</div> <!-- gist_data -->

     <div class="push"></div>
	
	
	<div id="gist_meta" style="margin-top:-150px;">
	  <div id="options">
	    <h3>Usage</h3>
	    <div class="private">
	      <p>
	        Copy and paste text from your clipboard within the text area.
	      </p>
	      <br/>
	      <p>
          You can drag and drop a file within the text area below for the content to be
          automatically read.
        </p>
	    </div>
	    
	    <br/>
	    <div class="private">
	      <label>
	<%=check_box("snippet", "private")%>
	<img src="/images/private.png" alt="private" /> <span>Private Snippet<br/>(will not show up on main page)</span>
	      </label>

	    </div>
	  </div>
	</div>
	
   <%end%>
</div>

   <script>
   //var holder = document.getElementById('holder'),
       // state = document.getElementById('status');
       // 
           if (typeof window.FileReader === 'undefined') {
                     //state.className = 'fail';
                     console.log('fail');
                   } else {
                     //state.className = 'success';
                     //state.innerHTML = 'File API & FileReader available';
                     console.log('File API & FileReader available');
                   }

   var holder = document.getElementById('holder');
   holder.ondragover = function () { this.className = 'hover'; return false; };
   holder.ondragend = function () { this.className = ''; return false; };
   holder.ondrop = function (e) {
     this.className = '';
     e.preventDefault();

     var file = e.dataTransfer.files[0],
         reader = new FileReader();
     reader.onload = function (event) {
       //holder.style.background = 'url(' + event.target.result + ') no-repeat center';
       //console.log(event.target.result);
       //console.log(holder);
       holder.value = event.target.result;
     };

     //reader.readAsDataURL(file); // this reads the file in base64 encoding format suitable for images
     reader.readAsText(file); // this reads the file as plain text
     return false;
   };
   </script>

